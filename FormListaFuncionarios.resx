<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="iconLimparFiltro.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAA+BJREFUaEPtmT1rFUEUhsfZXbS2UlRQYmfjR6GgIlqpjWhCChsL0T9hYZLfYGEq
        wdybG2JhZToTEEnwB8QbmwgiiJJGY2GCEN8znk32zp44m3t39gP3gRevc87MOWd39uxHVENDQ0NDQ0P1
        aAfBTejjdBBs1UmUcycIbnAZ2cHET9KCdRBy/8xlZOe/K5i2BSav2ovVQJTzdS6jP2aVOkRHzVq4MkJu
        X5DjEU43H6bC8AIW/iUFLFmbnTC8zGnmy7TW94SA5UrrB5yeHxBkMhW0PD3ltPwxqVTU1vqNELxYab04
        p9R+TssvZTcxL03KRYlNzF+TclFGE8Pl9JDDlwOSKLKJ+W9SLgprYkU2KRe+m1gpTcqFxyZWXpNy4aOJ
        ld6kXCDJPJtY+U3KRW5NrEpNysWgTaySTcrFAE2suk3KRT9NrPJNqqFhMLaU2teOonPY7hPY7gv4dwX6
        yery2PhMFJ3lKfWECkUPGEXj+4CCxOtdEB2MEZrLyxSPlVCPUMzvdhheYddtOkoNodh30pxM0nrpuVIn
        eLliERNiYTs+YrdtcAAuwfbV9u1Da9A1XrY4rCR2pPX8Y6U0uxlaQXAVts2Ub5/CDtqQdpBXpESMwvA8
        uxhoCyLBb6LvYFrD2ic5jH+EBOjsvmKzgRtU/9esS3guL6yRSQnQdcpmAxIalfzyFHbPMIfzixB8NXm0
        6fe/bj1obHNTSh0l4cC8TPlgLLaTb8q+oy6H9IsdGMU9YZOBHyp6fJKiQthVLSgVYv5MbKPfNMZmZQ5K
        Ym5KUXSGXf1hB+1ofZdNBoxN2D5JJQsm4qLtYgncv49Ja8TCnDF29UcqsHWU+dGw1ycpbFm7MPq/NCZu
        +YQQ6zW7+8MOihf7g2wy4Kg7Hx2ls5mEbOQjzbW0wlP8YQelT0BsMiDRddtHEs7OC6loHMAA9pbtL4li
        8TR/2EGfKXWATQaM/bB9dtHsbgWjkCnBX9J3nuYPOyia0GE2GZBslrchsdiYPRTt/9ZkB7XfW9Fo5m2f
        HtW9abW0vs8mA8bGbZ+k9nJbct6Htcb7imesoMt4I7rFJgOdccunR8mC42Jjm1206z7ciqLT7OoPBFpG
        YmO4/57ioR7Mi8PfLxVikvS4SEWbYqQti7HYTr4pOws5vOeQ5YOERuwEPeg2hysffj1cEpLMR1q/Lez1
        MCvYksex7bx8AMDaQxymWtDnGBS9ISTdl2ityv/ZphWGF5FsLh/x6BsZL1tt6PsWrrtFoYhswjVLlwgv
        Vw/4S8gwCuimCtpFdOvBWb3DS9QXeodGMWP0aIjCuvi9TjK/aQxPUNkeKpT6A2kwnyJCrK4rAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>